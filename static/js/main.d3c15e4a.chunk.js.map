{"version":3,"sources":["pages/NavBar/NavBar.tsx","pages/Main/Main.tsx","pages/Resume/Resume.tsx","pages/About/About.tsx","pages/Contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","useState","navbar","setNavbar","window","addEventListener","scrollY","className","onClick","animateScroll","scrollToTop","to","smooth","duration","offset","Main","id","Resume","About","sendEmail","e","preventDefault","emailjs","sendForm","target","then","result","console","log","text","error","reset","Contact","modalIsOpen","setModalIsOpen","onSubmit","type","placeholder","name","rows","value","isOpen","onRequestClose","href","icon","faLinkedin","faGithubSquare","faFacebookSquare","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"+XAsDeA,G,MAlDA,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,OAERF,oBAAS,GAFD,eAcnB,OAFAG,OAAOC,iBAAiB,UARC,WACnBD,OAAOE,SAAW,GACpBH,GAAU,GAEVA,GAAU,MAOZ,yBAAKI,UAAWL,EAAS,aAAe,OACtC,yBAAKK,UAAU,YAAYC,QAAS,kBAAMC,gBAAcC,gBAAxD,QAGA,kBAAC,OAAD,CACEH,UAAU,cACVI,GAAG,SACHC,QAAQ,EACRC,SAAU,IACVC,QAAS,IALX,UASA,kBAAC,OAAD,CACEP,UAAU,aACVI,GAAG,QACHC,QAAQ,EACRC,SAAU,IACVC,QAAS,IALX,SASA,kBAAC,OAAD,CACEP,UAAU,eACVI,GAAG,UACHC,QAAQ,EACRC,SAAU,IACVC,QAAS,IALX,cC3BSC,G,MAXF,WACX,OACE,6BAASC,GAAG,QACV,yBAAKT,UAAU,YACb,yBAAKA,UAAU,MAAf,cACA,yBAAKA,UAAU,MAAf,YACA,yBAAKA,UAAU,MAAf,6BCwGOU,G,MA9GA,WACX,OACI,6BAASD,GAAG,UACR,yBAAKT,UAAU,gBACX,wBAAIA,UAAU,aAAd,MACA,wBAAIA,UAAU,aAAd,WAEJ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eAAf,aACA,yBAAKA,UAAU,cACX,uBAAGA,UAAU,iBAAb,wBACA,uBAAGA,UAAU,kBAAb,uBACA,uBAAGA,UAAU,gBAAb,yDAGI,6BAHJ,aAMA,uBAAGA,UAAU,mBAAb,2BAGJ,yBAAKA,UAAU,cACX,uBAAGA,UAAU,iBAAb,gCAGA,uBAAGA,UAAU,kBAAb,wCAGA,uBAAGA,UAAU,gBAAb,mEAEI,6BAFJ,QAKA,uBAAGA,UAAU,mBAAb,sCAKJ,yBAAKA,UAAU,cACX,uBAAGA,UAAU,kBAGb,uBAAGA,UAAU,mBAGb,uBAAGA,UAAU,gBAET,6BAFJ,QAKA,uBAAGA,UAAU,sBAOrB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,cACX,uBAAGA,UAAU,iBAAb,sBACA,uBAAGA,UAAU,kBAAb,iCAGA,uBAAGA,UAAU,gBAAb,0DAEa,6BAFb,2DAIA,uBAAGA,UAAU,mBAAb,6BAGJ,yBAAKA,UAAU,cACX,uBAAGA,UAAU,iBAAb,gCAGA,uBAAGA,UAAU,kBAAb,2BACA,uBAAGA,UAAU,gBAAb,6DAEc,6BAFd,8DAMA,uBAAGA,UAAU,mBAAb,4CAKJ,yBAAKA,UAAU,cACX,uBAAGA,UAAU,eAGb,uBAAGA,UAAU,gBAGb,uBAAGA,UAAU,aAET,8BAGJ,uBAAGA,UAAU,uBCzFtBW,G,MAXD,WACZ,OACE,6BAASF,GAAG,SACV,yBAAKT,UAAU,eACb,wBAAIA,UAAU,YAAd,SACA,wBAAIA,UAAU,YAAd,U,0DCMR,SAASY,EAAUC,GACjBA,EAAEC,iBAEFC,IACGC,SAAS,QAAS,WAAYH,EAAEI,OAAQ,8BACxCC,MACC,SAACC,GACCC,QAAQC,IAAIF,EAAOG,SAErB,SAACC,GACCH,QAAQC,IAAIE,EAAMD,SAGxBT,EAAEI,OAAOO,QAGX,IAoGeC,EApGC,WAAO,IAAD,EACkB/B,oBAAS,GAD3B,mBACbgC,EADa,KACAC,EADA,KAEpB,OACE,6BAASlB,GAAG,WACV,yBAAKT,UAAU,iBACb,wBAAIA,UAAU,cAAd,OACA,wBAAIA,UAAU,cAAd,aAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,qBAAf,YACA,0BAAM4B,SAAUhB,GACd,yBAAKZ,UAAU,aACb,2BACE6B,KAAK,OACL7B,UAAU,iBACV8B,YAAY,YACZC,KAAK,SAEP,2BACEF,KAAK,QACL7B,UAAU,iBACV8B,YAAY,aACZC,KAAK,UAEP,2BACEF,KAAK,OACL7B,UAAU,iBACV8B,YAAY,UACZC,KAAK,YAEP,8BACE/B,UAAU,iBACVgC,KAAM,EACNF,YAAY,kBACZC,KAAK,YAEP,2BACEF,KAAK,SACL7B,UAAU,iBACViC,MAAM,eACNhC,QAAS,kBAAM0B,GAAe,MAEhC,kBAAC,IAAD,CACE3B,UAAU,qBACVkC,OAAQR,EACRS,eAAgB,kBAAMR,GAAe,KAErC,wDACA,4BACE3B,UAAU,qBACVC,QAAS,kBAAM0B,GAAe,KAFhC,aAWR,yBAAK3B,UAAU,WACb,yBAAKA,UAAU,uBAAf,sBACA,yBAAKA,UAAU,eACb,uBAAGA,UAAU,uBAAb,SACA,uBAAGA,UAAU,yBAAb,0BACA,uBAAGA,UAAU,uBAAb,SACA,uBAAGA,UAAU,yBAAb,oBACA,uBAAGA,UAAU,yBAAb,WACA,uBAAGA,UAAU,2BAAb,sBACqB,6BADrB,gBAEe,6BAFf,iBAKA,yBAAKA,UAAU,kBACb,uBACEoC,KAAK,0CACLpC,UAAU,mBAEV,kBAAC,IAAD,CAAiBqC,KAAMC,OAEzB,uBACEF,KAAK,iCACLpC,UAAU,iBAEV,kBAAC,IAAD,CAAiBqC,KAAME,OAEzB,uBACEH,KAAK,2CACLpC,UAAU,mBAEV,kBAAC,IAAD,CAAiBqC,KAAMG,aCxGxBC,MAZf,WACE,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCc0C,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjC,GACLH,QAAQG,MAAMA,EAAMkC,c","file":"static/js/main.d3c15e4a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, animateScroll } from \"react-scroll\";\nimport \"./NavBar.scss\";\n\nconst NavBar = () => {\n  const [navbar, setNavbar] = useState(false);\n  const [] = useState(false);\n\n  const changeBackground = () => {\n    if (window.scrollY >= 50) {\n      setNavbar(true);\n    } else {\n      setNavbar(false);\n    }\n  };\n\n  window.addEventListener(\"scroll\", changeBackground);\n\n  return (\n    <nav className={navbar ? \"nav active\" : \"nav\"}>\n      <div className=\"link home\" onClick={() => animateScroll.scrollToTop()}>\n        HOME\n      </div>\n      <Link\n        className=\"link resume\"\n        to=\"resume\"\n        smooth={true}\n        duration={1000}\n        offset={-80}\n      >\n        RESUME\n      </Link>\n      <Link\n        className=\"link about\"\n        to=\"about\"\n        smooth={true}\n        duration={1000}\n        offset={-80}\n      >\n        ABOUT\n      </Link>\n      <Link\n        className=\"link contact\"\n        to=\"contact\"\n        smooth={true}\n        duration={1000}\n        offset={-80}\n      >\n        CONTACT\n      </Link>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Main.scss\";\n\nconst Main = () => {\n  return (\n    <section id=\"main\">\n      <div className=\"titlebox\">\n        <div className=\"p1\">Hello, I'm</div>\n        <div className=\"p2\">Lucas Li</div>\n        <div className=\"p3\">AND THIS IS MY RESUME</div>\n      </div>\n    </section>\n  );\n};\nexport default Main;\n","import React from \"react\";\nimport \"./Resume.scss\";\n\nconst Resume = () => {\n    return (\n        <section id=\"resume\">\n            <div className=\"resume-title\">\n                <h1 className=\"resume-t1\">My</h1>\n                <h1 className=\"resume-t2\">Resume</h1>\n            </div>\n            <div className=\"resume-content\">\n                <div className=\"edu\">\n                    <div className=\"restext edu\">Education</div>\n                    <div className=\"resbox 1-1\">\n                        <p className=\"inresbox time\">March 2019 - Present</p>\n                        <p className=\"inresbox title\">Bachelor of Science</p>\n                        <p className=\"inresbox des\">\n                            Majoring in Computer Science and Logic and\n                            Computation\n                            <br />\n                            GPA: 7.33\n                        </p>\n                        <p className=\"inresbox entity\">University of Auckland</p>\n                    </div>\n\n                    <div className=\"resbox 1-2\">\n                        <p className=\"inresbox time\">\n                            February 2018 - October 2018\n                        </p>\n                        <p className=\"inresbox title\">\n                            Bachelor of Engineering with Honours\n                        </p>\n                        <p className=\"inresbox des\">\n                            Majoring in Software Engineering. Discontinued after first year.\n                            <br />&nbsp;\n                            \n                        </p>\n                        <p className=\"inresbox entity\">\n                            Victoria University of Wellington\n                        </p>\n                    </div>\n\n                    <div className=\"resbox 1-3\">\n                        <p className=\"inresbox time\">\n                            \n                        </p>\n                        <p className=\"inresbox title\">\n                            \n                        </p>\n                        <p className=\"inresbox des\">\n                            \n                            <br />&nbsp;\n                            \n                        </p>\n                        <p className=\"inresbox entity\">\n                            \n                        </p>\n                    </div>\n\n                </div>\n\n                <div className=\"exp\">\n                    <div className=\"restext exp\">Experiences</div>\n                    <div className=\"resbox 2-1\">\n                        <p className=\"inresbox time\">May 2019 - Present</p>\n                        <p className=\"inresbox title\">\n                            Property Management Assistant\n                        </p>\n                        <p className=\"inresbox des\">\n                            Part-time Airbnb host for a New Zealand based\n                            property <br /> management company specializing in short term rentals.\n                        </p>\n                        <p className=\"inresbox entity\">Toodle Airbnb Management</p>\n                    </div>\n\n                    <div className=\"resbox 2-2\">\n                        <p className=\"inresbox time\">\n                            December 2019 - January 2020\n                        </p>\n                        <p className=\"inresbox title\">Software Testing Intern</p>\n                        <p className=\"inresbox des\">\n                            Took part in the development of a map labelling\n                            software. <br />\n                            Key responsibilities: Integration, user interface\n                            testing.\n                        </p>\n                        <p className=\"inresbox entity\">\n                            Jiangsu Digitaland Technology Co., Ltd.\n                        </p>\n                    </div>\n\n                    <div className=\"resbox 2-3\">\n                        <p className=\"resboxtime\">\n                            \n                        </p>\n                        <p className=\"resboxtitle\">\n\n                        </p>\n                        <p className=\"resboxdes\">\n                            \n                            <br />\n                            \n                        </p>\n                        <p className=\"resboxentity\">\n                            \n                        </p>\n                    </div>\n\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default Resume;\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <section id=\"about\">\n      <div className=\"about-title\">\n        <h1 className=\"about-t1\">About</h1>\n        <h1 className=\"about-t2\">Me</h1>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport \"./Contact.scss\";\nimport emailjs from \"emailjs-com\";\nimport Modal from \"react-modal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faGithub,\n  faGit,\n  faFacebook,\n  faFacebookSquare,\n  faGithubSquare,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nfunction sendEmail(e: any) {\n  e.preventDefault();\n\n  emailjs\n    .sendForm(\"gmail\", \"template\", e.target, \"user_1zZ8PaBX2WHppm5mri95i\")\n    .then(\n      (result) => {\n        console.log(result.text);\n      },\n      (error) => {\n        console.log(error.text);\n      }\n    );\n  e.target.reset();\n}\n\nconst Contact = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return (\n    <section id=\"contact\">\n      <div className=\"contact-title\">\n        <h1 className=\"contact-t1\">Get</h1>\n        <h1 className=\"contact-t2\">In Touch</h1>\n      </div>\n      <div className=\"resume-content\">\n        <div className=\"touch\">\n          <div className=\"contacttext touch\">Email Me</div>\n          <form onSubmit={sendEmail}>\n            <div className=\"touch-box\">\n              <input\n                type=\"text\"\n                className=\"touch-box-form\"\n                placeholder=\"Your Name\"\n                name=\"name\"\n              />\n              <input\n                type=\"email\"\n                className=\"touch-box-form\"\n                placeholder=\"Your Email\"\n                name=\"email\"\n              />\n              <input\n                type=\"text\"\n                className=\"touch-box-form\"\n                placeholder=\"Subject\"\n                name=\"subject\"\n              />\n              <textarea\n                className=\"touch-box-form\"\n                rows={8}\n                placeholder=\"Write a Message\"\n                name=\"message\"\n              />\n              <input\n                type=\"submit\"\n                className=\"touch-box-form\"\n                value=\"SEND MESSAGE\"\n                onClick={() => setModalIsOpen(true)}\n              />\n              <Modal\n                className=\"modal submit-modal\"\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n              >\n                <p>Message sent successfully</p>\n                <button\n                  className=\"modal submit-close\"\n                  onClick={() => setModalIsOpen(false)}\n                >\n                  Close\n                </button>\n              </Modal>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"details\">\n          <div className=\"contacttext details\">My Contact Details</div>\n          <div className=\"details-box\">\n            <p className=\"details-title email\">EMAIL</p>\n            <p className=\"details-content email\">sli.lucas233@gmail.com</p>\n            <p className=\"details-title phone\">PHONE</p>\n            <p className=\"details-content phone\">+64 022 1977 164</p>\n            <p className=\"details-title address\">ADDRESS</p>\n            <p className=\"details-content address\">\n              8B/33 Mount Street <br />\n              Auckland CBD <br />\n              Auckland 1010\n            </p>\n            <div className=\"details-social\">\n              <a\n                href=\"https://www.linkedin.com/in/lucasli233/\"\n                className=\"social linkedin\"\n              >\n                <FontAwesomeIcon icon={faLinkedin} />\n              </a>\n              <a\n                href=\"https://github.com/lucasli233/\"\n                className=\"social github\"\n              >\n                <FontAwesomeIcon icon={faGithubSquare} />\n              </a>\n              <a\n                href=\"https://www.facebook.com/LucasShengqiLi/\"\n                className=\"social facebook\"\n              >\n                <FontAwesomeIcon icon={faFacebookSquare} />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { NavBar, Main, About, Resume, Contact } from \"./pages\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Main />\n      <Resume />\n      <About />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}